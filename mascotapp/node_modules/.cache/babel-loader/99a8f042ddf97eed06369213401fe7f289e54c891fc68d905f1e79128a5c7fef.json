{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Facundo\\\\Documents\\\\VSCProjects\\\\react-introduccion\\\\mascotapp\\\\src\\\\components\\\\public\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport RickAndMortyService from '../../services/RickAndMorty.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [mascotas, setMascotas] = useState([]);\n\n  /*\r\n  ? Está pendiente a la escucha activa de cambios, es decir; cuando hay un cambio lo renderiza,\r\n  ? Va a estar escuchando lo que recibe como segundo parametro\r\n  */\n  useEffect(() => {\n    RickAndMortyService.getAllCharacters().then(data => setMascotas(data.results)).catch(error => console.log(error));\n  }, [mascotas]);\n  const cardList = mascotas.map(m => /*#__PURE__*/_jsxDEV(Card, {\n    mascota: m\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 42\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album py-5 bg-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\",\n        children: cardList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"EXiHT2yzVssvhidCBpYUXDbINEo=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","Card","RickAndMortyService","Cards","mascotas","setMascotas","getAllCharacters","then","data","results","catch","error","console","log","cardList","map","m","id"],"sources":["C:/Users/Facundo/Documents/VSCProjects/react-introduccion/mascotapp/src/components/public/Cards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Card from './Card'\r\nimport RickAndMortyService from '../../services/RickAndMorty.service';\r\n\r\nconst Cards = () => {\r\n\r\n    const [mascotas, setMascotas] = useState([]);\r\n\r\n    /*\r\n    ? Está pendiente a la escucha activa de cambios, es decir; cuando hay un cambio lo renderiza,\r\n    ? Va a estar escuchando lo que recibe como segundo parametro\r\n    */\r\n    useEffect(() => {\r\n        RickAndMortyService.getAllCharacters()\r\n            .then((data) => setMascotas(data.results))\r\n            .catch((error) => console.log(error));\r\n    }, [mascotas])\r\n\r\n    const cardList = mascotas.map((m) => <Card mascota={m} key={m.id} />)\r\n\r\n    return (\r\n        <div className=\"album py-5 bg-light\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                    {cardList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,mBAAmB,MAAM,qCAAqC;AAAC;AAEtE,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAE5C;AACJ;AACA;AACA;EACID,SAAS,CAAC,MAAM;IACZG,mBAAmB,CAACI,gBAAgB,EAAE,CACjCC,IAAI,CAAEC,IAAI,IAAKH,WAAW,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CACzCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMU,QAAQ,GAAGV,QAAQ,CAACW,GAAG,CAAEC,CAAC,iBAAK,QAAC,IAAI;IAAC,OAAO,EAAEA;EAAE,GAAMA,CAAC,CAACC,EAAE;IAAA;IAAA;IAAA;EAAA,QAAI,CAAC;EAErE,oBACI;IAAK,SAAS,EAAC,qBAAqB;IAAA,uBAChC;MAAK,SAAS,EAAC,WAAW;MAAA,uBAEtB;QAAK,SAAS,EAAC,gDAAgD;QAAA,UAC1DH;MAAQ;QAAA;QAAA;QAAA;MAAA;IACP;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA1BKX,KAAK;AAAA,KAALA,KAAK;AA4BX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
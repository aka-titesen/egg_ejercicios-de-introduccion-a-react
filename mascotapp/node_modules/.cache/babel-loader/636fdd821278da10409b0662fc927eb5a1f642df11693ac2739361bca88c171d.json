{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Facundo\\\\Documents\\\\VSCProjects\\\\react-introduccion\\\\mascotapp\\\\src\\\\components\\\\public\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Main extends Component {\n  //Componente de clase\n\n  /**\r\n   * @param {*} props\r\n   * @description La propiedad \"state\" en React es un objeto que contiene los datos dinámicos de un componente.\r\n   * Es una parte clave de la arquitectura de React y se utiliza para almacenar y controlar los valores que cambian\r\n   * y afectan la interfaz de usuario de un componente.\r\n   * Los cambios en el \"state\" causan un re-render del componente y actualizan la vista en la página.\r\n   * La propiedad \"state\" solo se puede modificar usando la función \"setState\" en React, y no se puede modificar directamente.\r\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      mascotas: []\n    };\n  }\n  componentDidMount() {}\n  /*\r\n  Linea 31:\r\n  Mando a cards los resultados, es decir; la lista de personajes.\r\n  Cards.js recibirá la lista de personajes por parámetro (props).\r\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Main;","map":{"version":3,"names":["React","Component","Cards","Main","constructor","props","state","mascotas","componentDidMount","render"],"sources":["C:/Users/Facundo/Documents/VSCProjects/react-introduccion/mascotapp/src/components/public/Main.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Cards from './Cards';\r\n\r\nexport class Main extends Component { //Componente de clase\r\n\r\n    /**\r\n     * @param {*} props\r\n     * @description La propiedad \"state\" en React es un objeto que contiene los datos dinámicos de un componente.\r\n     * Es una parte clave de la arquitectura de React y se utiliza para almacenar y controlar los valores que cambian\r\n     * y afectan la interfaz de usuario de un componente.\r\n     * Los cambios en el \"state\" causan un re-render del componente y actualizan la vista en la página.\r\n     * La propiedad \"state\" solo se puede modificar usando la función \"setState\" en React, y no se puede modificar directamente.\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { mascotas: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    /*\r\n    Linea 31:\r\n    Mando a cards los resultados, es decir; la lista de personajes.\r\n    Cards.js recibirá la lista de personajes por parámetro (props).\r\n    */\r\n    render() {\r\n        return (\r\n            <main>\r\n                <Cards />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,OAAO,MAAMC,IAAI,SAASF,SAAS,CAAC;EAAE;;EAElC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAG,CAAC;EACjC;EAEAC,iBAAiB,GAAG,CAEpB;EACA;AACJ;AACA;AACA;AACA;EACIC,MAAM,GAAG;IACL,oBACI;MAAA,uBACI,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAEf;AACJ;AAEA,eAAeN,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
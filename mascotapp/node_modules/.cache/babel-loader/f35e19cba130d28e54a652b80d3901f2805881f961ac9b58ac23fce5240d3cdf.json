{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Facundo\\\\Documents\\\\VSCProjects\\\\react-introduccion\\\\mascotapp\\\\src\\\\components\\\\public\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useUserForm } from './../../hooks/Custom.hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const {\n    form,\n    setform,\n    handleChanges\n  } = useUserForm();\n\n  //* Va a revisar si ambas contraseñas que ingresa el usuario son iguales\n  //* Es decir maneja el estado para ver si las contraseñas tienen igualdad\n  const [areEquals, setAreEquals] = useState(true);\n\n  //* Se encargará de revisar si se ingresa la contraseña de confimación.\n  //* Es decir maneja el estado para ver si hay la contraseña de confirmación\n  const [passwordConfirmation, setPasswordConfirmation] = useState(second);\n\n  /**\r\n   * * Se va encargar de atrapar el envió del formulario, \r\n   * * y si tuvieramos una api, es decir servidor y/o base de datos, la enviaría allí\r\n   */\n  const handleSubmit = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-25 mx-auto mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-3\",\n      children: \"Humano Registrate!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"needs-validation\",\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            placeholder: \"you@example.com\",\n            name: \"email\" //Denominador común que usamos para atrapar en el Custom.hook para armar el json\n            ,\n            onChange: handleChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"Please enter a valid email address for shipping updates.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            className: \"form-label\",\n            children: \"Clave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"address\",\n            placeholder: \"Clave\",\n            name: \"password\" //Denominador común que usamos para atrapar en el Custom.hook para armar el json\n            ,\n            onChange: handleChanges,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"Please enter your shipping address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password2\",\n            className: \"form-label\",\n            children: \"Repetir Clave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            // no le ponemos name porque no nos interesa mandarla a la api, la contraseña se manda del primer input\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password2\",\n            placeholder: \"Repetir clave\",\n            onChange: handlePasswordConfirmation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), !areEquals && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text list-group-item-danger\",\n            children: \"Las claves no son iguales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !areEquals || pass,\n          className: \"w-100 btn btn-primary btn-lg\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Registrarme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"Ua2q8vNbp+KzkAzJMQq9rBAlB0w=\", false, function () {\n  return [useUserForm];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useUserForm","UserForm","form","setform","handleChanges","areEquals","setAreEquals","passwordConfirmation","setPasswordConfirmation","second","handleSubmit","handlePasswordConfirmation","pass"],"sources":["C:/Users/Facundo/Documents/VSCProjects/react-introduccion/mascotapp/src/components/public/UserForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { useUserForm } from './../../hooks/Custom.hooks';\r\n\r\nconst UserForm = () => {\r\n\r\n  const {form,setform,handleChanges} = useUserForm();\r\n\r\n  //* Va a revisar si ambas contraseñas que ingresa el usuario son iguales\r\n  //* Es decir maneja el estado para ver si las contraseñas tienen igualdad\r\n  const [areEquals, setAreEquals] = useState(true)\r\n\r\n  //* Se encargará de revisar si se ingresa la contraseña de confimación.\r\n  //* Es decir maneja el estado para ver si hay la contraseña de confirmación\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(second)\r\n\r\n  /**\r\n   * * Se va encargar de atrapar el envió del formulario, \r\n   * * y si tuvieramos una api, es decir servidor y/o base de datos, la enviaría allí\r\n   */\r\n  const handleSubmit = () =>{\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-25 mx-auto mt-5\">\r\n      <h4 className=\"mb-3\">Humano Registrate!</h4>\r\n      <form className=\"needs-validation\" noValidate>\r\n        <div className=\"row g-3\">\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"you@example.com\"\r\n              name=\"email\" //Denominador común que usamos para atrapar en el Custom.hook para armar el json\r\n              onChange={handleChanges}\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              Please enter a valid email address for shipping updates.\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"address\" className=\"form-label\">\r\n              Clave\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"address\"\r\n              placeholder=\"Clave\"\r\n              name=\"password\" //Denominador común que usamos para atrapar en el Custom.hook para armar el json\r\n              onChange={handleChanges}\r\n              required\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              Please enter your shipping address.\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"password2\" className=\"form-label\">\r\n              Repetir Clave\r\n            </label>\r\n            <input\r\n              // no le ponemos name porque no nos interesa mandarla a la api, la contraseña se manda del primer input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password2\"\r\n              placeholder=\"Repetir clave\"\r\n              onChange={handlePasswordConfirmation}\r\n            />\r\n            {!areEquals && (\r\n              <div className=\"form-text list-group-item-danger\">\r\n                Las claves no son iguales\r\n              </div>\r\n            )}\r\n          </div>\r\n          <button\r\n            disabled={!areEquals || pass}\r\n            className=\"w-100 btn btn-primary btn-lg\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Registrarme\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default UserForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}